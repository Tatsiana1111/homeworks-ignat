{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/Span.module.css","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/JuniorPlus.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","navlinks","to","Message","props","style","message","img","src","avatar","messageCorner","messageBlock","name","text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","someClass","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","newUser","v1","newUsers","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","width","height","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","Junior","JuniorPlus","PATH","Pages","path","element","HW5","onOff","setOnOff","navbar","button","onMouseOver","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.671dd57f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2ooWk\",\"img\":\"Message_img__2i3Ha\",\"messageBlock\":\"Message_messageBlock__1NlUK\",\"messageCorner\":\"Message_messageCorner__3NSFX\",\"name\":\"Message_name__1FM1A\",\"text\":\"Message_text__2R6gA\",\"time\":\"Message_time__3arHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlinks\":\"Header_navlinks__q3Dp0\",\"button\":\"Header_button__3km3F\",\"navbar\":\"Header_navbar__2mduH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1ST1Z\",\"errorInput\":\"SuperInputText_errorInput__LxqQF\",\"error\":\"SuperInputText_error__33ey7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3o9V1\",\"red\":\"SuperButton_red__1lo7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1E69k\",\"error\":\"Greeting_error__2Nsim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2HwrO\",\"column\":\"HW4_column__36FYN\",\"testSpanError\":\"HW4_testSpanError__3uukG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__GnLGe\",\"spanClassName\":\"SuperCheckbox_spanClassName__1lLZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Ex2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Span_span__1Z0LV\"};","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport s from './Header.module.css'\n\n\nfunction Header() {\n    return (\n        <div>\n            <span><NavLink className={s.navlinks} to={'/pre-junior'}>PreJunior </NavLink></span>\n            <span><NavLink className={s.navlinks} to={'/junior'}>Junior </NavLink></span>\n            <span><NavLink className={s.navlinks} to={'/junior-plus'}>JuniorPlus </NavLink></span>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport style from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst Message: React.FC<MessageType> = (props) => {\n    return (\n        <div className={style.message}>\n            <img className={style.img} src={props.avatar}/>\n            <div className={style.messageCorner}></div>\n            <div className={style.messageBlock}>\n                <div className={style.name}>{props.name}</div>\n                <div className={style.text}>{props.message}</div>\n                <div className={style.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType, filterAffairs} from \"./HW2\";\nimport Affairs from \"./Affairs\";\nimport affairs from \"./Affairs\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        return props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div>\n            <span> {props.affair.name} </span>\n            <span> {props.affair.priority} </span>\n            <SuperButton onClick={deleteCallback} red>X</SuperButton>\n            {/*<button onClick={deleteCallback}>X</button>*/}\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nexport type AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        return props.setFilter('all')\n    }\n    const setHigh = () => {\n        return props.setFilter('high')\n    }\n    const setMiddle = () => {\n        return props.setFilter('middle')\n    }\n    const setLow = () => {\n        return props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>ALL</SuperButton>\n            <SuperButton onClick={setHigh}>HIGH</SuperButton>\n            <SuperButton onClick={setMiddle}>MIDDLE</SuperButton>\n            <SuperButton onClick={setLow}>LOW</SuperButton>\n            {/*<button onClick={setAll}>All</button>*/}\n            {/*<button onClick={setHigh}>High</button>*/}\n            {/*<button onClick={setMiddle}>Middle</button>*/}\n            {/*<button onClick={setLow}>Low</button>*/}\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport affairs from \"./Affairs\";\n\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    else if (filter === 'low') return affairs.filter(el => el.priority === 'low')\n    else if (filter === 'high') return affairs.filter(el => el.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(el => el.priority === 'middle')\n    else {\n        return []\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(el => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.someClass\n\n    return (\n        <div>\n            {/*<input value={name} onChange={setNameCallback} className={inputClass}/>*/}\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n        setError('')\n    }\n    const addUser = () => {\n        if (name.trim() === '') {\n            setError('String is empty')\n            setName('')\n        } else {\n            setError('')\n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        let newUser = {_id: v1(), name: name}\n        let newUsers = [...users, newUser]\n        return setUsers(newUsers)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './Span.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    ><img width='12px' height='12px' src='https://cdn-icons-png.flaticon.com/512/103/103449.png'/>\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    ERROR: '/*'\n\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                // add routes\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={PATH.ERROR} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React, {useState} from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\nimport s from './Header.module.css'\n\nfunction HW5() {\n    const [onOff, setOnOff] = useState(true)\n    const onMouseHandler = () => {\n        setOnOff(!onOff)\n    }\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <div className={s.navbar}>\n                    <button className={s.button} onMouseOver={onMouseHandler}/>\n                    {!onOff && <Header/>}\n                </div>\n                <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}